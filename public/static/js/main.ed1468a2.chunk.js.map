{"version":3,"sources":["utils/authProvider.js","components/Course/index.js","components/Student/index.js","App.js","utils/httpClient.js","index.js"],"names":["login","username","password","axios","post","process","then","res","data","scs","localStorage","setItem","token","removeItem","catch","err","console","log","logout","Promise","resolve","checkError","status","reject","checkAuth","getItem","getPermissions","CourseList","props","List","filters","Datagrid","rowClick","TextField","source","DateField","CourseCreate","Create","SimpleForm","TextInput","label","CourseEdit","title","CourseTitle","record","CourseFilter","Filter","alwaysOn","StudentList","NumberField","StudentCreate","NumberInput","max","min","StudentEdit","StudentTitle","name","StudentFilter","dataProvider","jsonServerProvider","url","options","headers","Headers","Accept","set","fetchUtils","fetchJson","App","Admin","authProvider","Resource","list","create","edit","icon","EditIcon","UserIcon","dotenv","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed1468a2.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL\r\n\r\nexport default {\r\n  login: ({ username, password }) => {\r\n\t\treturn axios.post(`${API_URL}/auth`, {username, password})\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(!!res.data.scs)\r\n\t\t\t\t\treturn\tlocalStorage.setItem('token', res.data.token)\r\n\r\n\t\t\t\treturn localStorage.removeItem('token')\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n  },\r\n  logout: () => {\r\n      localStorage.removeItem('token');\r\n      return Promise.resolve();\r\n  },\r\n  checkError: ({ status }) => {\r\n      if (status === 401 || status === 403) {\r\n          localStorage.removeItem('token');\r\n          return Promise.reject();\r\n      }\r\n      return Promise.resolve();\r\n  },\r\n  checkAuth: () => {\r\n      return localStorage.getItem('token')\r\n          ? Promise.resolve()\r\n          : Promise.reject();\r\n  },\r\n  getPermissions: () => Promise.resolve(),\r\n};","import * as React from \"react\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport { \r\n\tList, \r\n\tDatagrid, \r\n\tTextField, \r\n\tDateField,\r\n\tEdit,\r\n\tSimpleForm,\r\n\tTextInput,\r\n\tFilter,\r\n\tCreate\r\n} from 'react-admin';\r\n\r\n\r\n\r\nexport const CourseList = props => {\r\n\treturn (\r\n\t\t<List {...props} filters={<CourseFilter />}>\r\n\t\t\t<Datagrid rowClick=\"edit\">\r\n\t\t\t\t<TextField source=\"title\" />\r\n\t\t\t\t<TextField source=\"field\" />\r\n\t\t\t\t<DateField source=\"createdAt\" />\r\n\t\t\t</Datagrid>\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nexport const CourseCreate = props => (\r\n\t<Create {...props}>\r\n\t\t<SimpleForm>\r\n\t\t\t<TextInput label=\"Title\" source=\"title\" />\r\n\t\t\t<TextInput label=\"Field\" source=\"field\" />\r\n\t\t</SimpleForm>\r\n\t</Create>\r\n)\r\n\r\n\r\nexport const CourseEdit = props => (\r\n\t<Edit title={<CourseTitle />} {...props}>\r\n\t\t<SimpleForm>\r\n\t\t\t<TextInput label=\"Title\" source=\"title\" />\r\n\t\t\t<TextInput label=\"Field\" source=\"field\" />\t\r\n\t\t</SimpleForm>\r\n\t</Edit>\r\n)\r\n\r\n\r\nconst CourseTitle = ({ record }) => {\r\n\treturn <span>Course - {!!record? `${record.title}` : ''}</span>\r\n}\r\n\r\n\r\nconst CourseFilter = props => (\r\n\t<Filter {...props}>\r\n\t\t<TextInput label=\"Search\" source=\"q\" alwaysOn></TextInput>\r\n\t</Filter>\r\n)","import * as React from \"react\";\r\nimport {\r\n\tSimpleForm, \r\n\tList, \r\n\tDatagrid, \r\n\tTextField,\r\n  DateField,\r\n  NumberField,\r\n\tEdit,\r\n  TextInput,\r\n  NumberInput,\r\n\tFilter,\r\n\tCreate\r\n} from 'react-admin';\r\n\r\n\r\n\r\nexport const StudentList = props => {\r\n\treturn (\r\n\t\t<List {...props} filters={<StudentFilter />}>\r\n\t\t\t<Datagrid rowClick=\"edit\">\r\n\t\t\t\t<TextField source=\"name\" />\r\n\t\t\t\t<NumberField source=\"age\" />\r\n\t\t\t\t<DateField source=\"createdAt\" />\r\n\t\t\t</Datagrid>\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nexport const StudentCreate = props => (\r\n\t<Create {...props}>\r\n\t\t<SimpleForm>\r\n\t\t\t<TextInput label=\"Name\" source=\"name\" />\r\n\t\t\t<NumberInput label=\"Age\" max=\"100\" min=\"5\" source=\"age\" />\r\n\t\t</SimpleForm>\r\n\t</Create>\r\n)\r\n\r\n\r\nexport const StudentEdit = props => {\r\n\treturn (\r\n\t\t<Edit title={<StudentTitle />} {...props}>\r\n\t\t\t<SimpleForm>\r\n\t\t\t\t<TextInput label=\"Name\" source=\"name\" />\r\n\t\t\t\t<NumberInput label=\"Age\" max=\"100\" min=\"5\" source=\"age\" />\t\r\n\t\t\t</SimpleForm>\r\n\t\t</Edit>\r\n\t)\r\n}\r\n\r\n\r\nconst StudentTitle = ({ record }) => {\r\n\treturn <span>Student - {!!record? `${record.name}` : ''}</span>\r\n}\r\n\r\n\r\nconst StudentFilter = props => (\r\n\t<Filter {...props}>\r\n\t\t<TextInput label=\"Search\" source=\"q\" alwaysOn></TextInput>\r\n\t</Filter>\r\n)","import * as React from 'react'\nimport EditIcon from '@material-ui/icons/Edit'\nimport UserIcon from '@material-ui/icons/Group'\nimport jsonServerProvider from 'ra-data-json-server'\nimport authProvider from './utils/authProvider'\nimport { httpClient } from \"./utils/httpClient\";\nimport { \n  Admin,\n  Resource\n} from 'react-admin';\nimport { \n  CourseList,\n  CourseCreate,\n  CourseEdit\n} from './components/Course'\nimport { \n  StudentList,\n  StudentCreate,\n  StudentEdit\n} from './components/Student'\n\n\n\nconst API_URL = process.env.REACT_APP_API_URL\nconst dataProvider = jsonServerProvider(API_URL, httpClient)\n\nconst App = () => {\n  return (\n    <Admin \n      dataProvider={dataProvider}\n      authProvider={authProvider}\n    >\n      <Resource \n        name='courses'\n        list={CourseList}\n        create={CourseCreate}\n        edit={CourseEdit}\n        icon={EditIcon}\n      />\n      <Resource \n        name='students'\n        list={StudentList}\n        edit={StudentEdit}\n        create={StudentCreate}\n        icon={UserIcon}\n      />\n    </Admin>\n  )\n}\n\nexport default App","import { fetchUtils } from \"react-admin\";\r\n\r\nexport const httpClient = (url, options = {}) => {\r\n  if (!options.headers) {\r\n    options.headers = new Headers({ Accept: 'application/json' });\r\n  }\r\n  const token = localStorage.getItem('token');\r\n  options.headers.set('Authorization', `Bearer ${token}`);\r\n  return fetchUtils.fetchJson(url, options);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport dotenv from 'dotenv'\nimport App from './App';\n\ndotenv.config()\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}