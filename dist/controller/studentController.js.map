{"version":3,"sources":["../../src/controller/studentController.js"],"names":["studentController","get","req","res","skip","Number","query","_start","limit","_end","order","_sort","sort","_order","students","count","header","send","params","id","student","post","body","put","delete"],"mappings":";;;;;;AAAA;;AAEA;;;;AAQA,IAAMA,oBAAoB,sBAA1B;;AAGAA,kBAAkBC,GAAlB,CAAsB,GAAtB;AAAA,qEAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBC,gBADmB,GACZC,OAAOH,IAAII,KAAJ,CAAUC,MAAjB,CADY;AAEnBC,iBAFmB,GAEXH,OAAOH,IAAII,KAAJ,CAAUG,IAAjB,IAAyBL,IAFd;AAGnBM,iBAHmB,GAGXR,IAAII,KAAJ,CAAUK,KAHC;AAInBC,gBAJmB,GAIZV,IAAII,KAAJ,CAAUO,MAJE;AAAA;AAAA,mBAMO,+BAAY,EAAET,UAAF,EAAQI,YAAR,EAAeE,YAAf,EAAsBE,UAAtB,EAAZ,CANP;;AAAA;AAAA;AAMnBE,oBANmB,SAMnBA,QANmB;AAMTC,iBANS,SAMTA,KANS;;AAOzBZ,gBAAIa,MAAJ,CAAW,eAAX,EAA4BD,KAA5B;AAPyB,6CAQlBZ,IAAIc,IAAJ,CAASH,QAAT,CARkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAWAd,kBAAkBC,GAAlB,CAAsB,MAAtB;AAAA,sEAA8B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR,iCAAcD,IAAIgB,MAAJ,CAAWC,EAAzB,CADQ;;AAAA;AACxBC,mBADwB;AAAA,8CAErBjB,IAAIc,IAAJ,CAASG,OAAT,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAKApB,kBAAkBqB,IAAlB,CAAuB,GAAvB;AAAA,sEAA4B,kBAAOnB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACN,oCAAiBD,IAAIoB,IAArB,CADM;;AAAA;AACtBF,mBADsB;AAAA,8CAEnBjB,IAAIc,IAAJ,CAASG,OAAT,CAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAKApB,kBAAkBuB,GAAlB,CAAsB,MAAtB;AAAA,sEAA8B,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR,oCAAiBD,IAAIoB,IAArB,CADQ;;AAAA;AACxBF,mBADwB;AAAA,8CAErBjB,IAAIc,IAAJ,CAASG,OAAT,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAKApB,kBAAkBwB,MAAlB,CAAyB,MAAzB;AAAA,sEAAiC,kBAAOtB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACX,oCAAiBD,IAAIgB,MAAJ,CAAWC,EAA5B,CADW;;AAAA;AAC3BC,mBAD2B;AAAA,8CAExBjB,IAAIc,IAAJ,CAAS,EAAEG,gBAAF,EAAT,CAFwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;;AAAA;AAAA;AAAA;AAAA;;kBAKepB,iB","file":"studentController.js","sourcesContent":["import { Router } from 'express'\r\n\r\nimport { \r\n  getStudents,\r\n  getOneStudent,\r\n  createOneStudent,\r\n  updateOneStudent,\r\n  deleteOneStudent\r\n} from \"../model/actions/StudentModel\";\r\n\r\nconst studentController = Router()\r\n\r\n\r\nstudentController.get('/', async (req, res) => {\r\n  const skip = Number(req.query._start)\r\n  const limit = Number(req.query._end) - skip\r\n  const order = req.query._sort\r\n  const sort = req.query._order\r\n\r\n  let { students, count } = await getStudents({ skip, limit, order, sort })\r\n  res.header('X-Total-Count', count)\r\n  return res.send(students)\r\n})\r\n\r\nstudentController.get('/:id', async (req, res) => {\r\n  let student = await getOneStudent(req.params.id)\r\n  return res.send(student)\r\n})\r\n\r\nstudentController.post('/', async (req, res) => {\r\n  let student = await createOneStudent(req.body)\r\n  return res.send(student)\r\n})\r\n\r\nstudentController.put('/:id', async (req, res) => {\r\n  let student = await updateOneStudent(req.body)\r\n  return res.send(student)\r\n})\r\n\r\nstudentController.delete('/:id', async (req, res) => {\r\n  let student = await deleteOneStudent(req.params.id)\r\n  return res.send({ student })\r\n})\r\n\r\nexport default studentController"]}