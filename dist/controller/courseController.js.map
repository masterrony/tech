{"version":3,"sources":["../../src/controller/courseController.js"],"names":["courseController","get","req","res","skip","Number","query","_start","limit","_end","sort","_sort","order","courses","count","header","send","params","id","course","post","body","put","delete"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;;;AAQA,IAAMA,mBAAmB,sBAAzB;;AAGAA,iBAAiBC,GAAjB,CAAqB,GAArB;AAAA,qEAA0B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBC,gBADkB,GACXC,OAAOH,IAAII,KAAJ,CAAUC,MAAjB,CADW;AAElBC,iBAFkB,GAEVH,OAAOH,IAAII,KAAJ,CAAUG,IAAjB,IAAyBL,IAFf;AAGlBM,gBAHkB,GAGXR,IAAII,KAAJ,CAAUK,KAHC;AAIlBC,iBAJkB,GAIVV,IAAII,KAAJ,CAAUK,KAAV,IAAmB,KAAnB,GAA2B,CAAC,CAA5B,GAAgC,CAJtB;AAAA;AAAA,mBAMO,6BAAW,EAAEP,UAAF,EAAQI,YAAR,EAAeE,UAAf,EAAqBE,YAArB,EAAX,CANP;;AAAA;AAAA;AAMlBC,mBANkB,SAMlBA,OANkB;AAMTC,iBANS,SAMTA,KANS;;AAOxBX,gBAAIY,MAAJ,CAAW,eAAX,EAA4BD,KAA5B;AAPwB,6CAQjBX,IAAIa,IAAJ,CAASH,OAAT,CARiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAWAb,iBAAiBC,GAAjB,CAAqB,MAArB;AAAA,sEAA6B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR,+BAAaD,IAAIe,MAAJ,CAAWC,EAAxB,CADQ;;AAAA;AACvBC,kBADuB;AAAA,8CAEpBhB,IAAIa,IAAJ,CAASG,MAAT,CAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAKAnB,iBAAiBoB,IAAjB,CAAsB,GAAtB;AAAA,sEAA2B,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACN,kCAAgBD,IAAImB,IAApB,CADM;;AAAA;AACrBF,kBADqB;AAAA,8CAElBhB,IAAIa,IAAJ,CAASG,MAAT,CAFkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAKAnB,iBAAiBsB,GAAjB,CAAqB,MAArB;AAAA,sEAA6B,kBAAOpB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACR,kCAAgBD,IAAImB,IAApB,CADQ;;AAAA;AACvBF,kBADuB;AAAA,8CAEpBhB,IAAIa,IAAJ,CAASG,MAAT,CAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;;AAKAnB,iBAAiBuB,MAAjB,CAAwB,MAAxB;AAAA,sEAAgC,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACX,kCAAgBD,IAAIe,MAAJ,CAAWC,EAA3B,CADW;;AAAA;AAC1BC,kBAD0B;AAAA,8CAEvBhB,IAAIa,IAAJ,CAAS,EAAEG,cAAF,EAAT,CAFuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;kBAKenB,gB","file":"courseController.js","sourcesContent":["import { Router } from 'express'\r\nimport { async } from 'regenerator-runtime';\r\n\r\nimport { \r\n  getCourses,\r\n  getOneCourse,\r\n  createOneCourse,\r\n  updateOneCourse,\r\n  deleteOneCourse\r\n} from \"../model/actions/CourseModel\";\r\n\r\nconst courseController = Router()\r\n\r\n\r\ncourseController.get('/', async (req, res) => {\r\n  const skip = Number(req.query._start)\r\n  const limit = Number(req.query._end) - skip\r\n  const sort = req.query._sort\r\n  const order = req.query._sort == 'ASC' ? -1 : 1\r\n\r\n  let { courses, count } = await getCourses({ skip, limit, sort, order })\r\n  res.header('X-Total-Count', count)\r\n  return res.send(courses)\r\n})\r\n\r\ncourseController.get('/:id', async (req, res) => {\r\n  let course = await getOneCourse(req.params.id)\r\n  return res.send(course)\r\n})\r\n\r\ncourseController.post('/', async (req, res) => {\r\n  let course = await createOneCourse(req.body)\r\n  return res.send(course)\r\n})\r\n\r\ncourseController.put('/:id', async (req, res) => {\r\n  let course = await updateOneCourse(req.body)\r\n  return res.send(course)\r\n})\r\n\r\ncourseController.delete('/:id', async (req, res) => {\r\n  let course = await deleteOneCourse(req.params.id)\r\n  return res.send({ course })\r\n})\r\n\r\nexport default courseController"]}