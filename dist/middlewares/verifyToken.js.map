{"version":3,"sources":["../../src/middlewares/verifyToken.js"],"names":["verifyToken","req","res","next","authHeader","headers","authorization","status","json","error","token","split","process","env","APP_KEY","err"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,oCAAc,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9C,MAAMC,aAAaH,IAAII,OAAJ,CAAYC,aAA/B;;AAEA,MAAG,CAACF,UAAJ,EACE,OAAOF,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,iBAAT,EAArB,CAAP;;AAEF,MAAMC,QAAQN,WAAWO,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAd;AACA,MAAI;AACF,QAAG,CAAC,0BAAOD,KAAP,EAAcE,QAAQC,GAAR,CAAYC,OAA1B,CAAJ,EACE,OAAOZ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,sBAAT,EAArB,CAAP;AACH,GAHD,CAGE,OAAOM,GAAP,EAAY;AACZ,WAAOb,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,sBAAT,EAArB,CAAP;AACD;;AAED,SAAON,MAAP;AACA,CAfM","file":"verifyToken.js","sourcesContent":["import { verify } from \"jsonwebtoken\";\r\n\r\nexport const verifyToken = (req, res, next) => {\r\n const authHeader = req.headers.authorization\r\n\r\n if(!authHeader)\r\n   return res.status(403).json({ error: 'No access token' })\r\n \r\n const token = authHeader.split(' ')[1]\r\n try {\r\n   if(!verify(token, process.env.APP_KEY))\r\n     return res.status(403).json({ error: 'Invalid access token' })\r\n } catch (err) {\r\n   return res.status(403).json({ error: 'Invalid access token' })\r\n }\r\n\r\n return next()\r\n}"]}