{"version":3,"sources":["../../../src/model/actions/StudentModel.js"],"names":["getStudents","skip","limit","order","sort","Student","findAll","offset","students","findAndCountAll","count","rows","getOneStudent","id","findByPk","student","createOneStudent","name","age","create","updateOneStudent","save","deleteOneStudent","destroy","where"],"mappings":";;;;;;;AAAA;;AACA;;;;AAIO,IAAMA;AAAA,qEAAc;AAAA,QAASC,IAAT,SAASA,IAAT;AAAA,QAAeC,KAAf,SAAeA,KAAf;AAAA,QAAsBC,KAAtB,SAAsBA,KAAtB;AAAA,QAA6BC,IAA7B,SAA6BA,IAA7B;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,cAAQC,OAAR,CAAgB;AACrCH,qBAAO,CACL,CAACA,KAAD,EAAQC,IAAR,CADK,CAD8B;AAIrCG,sBAAQN,IAJ6B;AAKrCC;AALqC,aAAhB,CADE;;AAAA;AACnBM,oBADmB;AAAA;AAAA,mBAQKH,cAAQI,eAAR,EARL;;AAAA;AAAA;AAQjBC,iBARiB,SAQjBA,KARiB;AAQVC,gBARU,SAQVA,IARU;AAAA,6CASlB,EAAEH,kBAAF,EAAYE,YAAZ,EATkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAYA,IAAME;AAAA,sEAAgB,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLR,cAAQS,QAAR,CAAiBD,EAAjB,CADK;;AAAA;AACrBE,mBADqB;AAAA,8CAEpBA,OAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMC;AAAA,sEAAmB;AAAA,QAASC,IAAT,SAASA,IAAT;AAAA,QAAeC,GAAf,SAAeA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRb,cAAQc,MAAR,CAAe,EAAEF,UAAF,EAAQC,QAAR,EAAf,CADQ;;AAAA;AACxBH,mBADwB;AAAA,8CAEvBA,OAFuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMK;AAAA,sEAAmB;AAAA,QAASP,EAAT,SAASA,EAAT;AAAA,QAAaI,IAAb,SAAaA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACTZ,cAAQS,QAAR,CAAiBD,EAAjB,CADS;;AAAA;AAC1BE,mBAD0B;;AAE9BA,oBAAQE,IAAR,GAAeA,IAAf;AACAF,oBAAQG,GAAR,GAAcA,GAAd;AACAH,oBAAQM,IAAR;AAJ8B,8CAKvBN,OALuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAQA,IAAMO;AAAA,sEAAmB,kBAAMT,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRR,cAAQkB,OAAR,CAAgB;AACpCC,qBAAO,EAAEX,MAAF;AAD6B,aAAhB,CADQ;;AAAA;AACxBE,mBADwB;AAAA,8CAIvBA,OAJuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"StudentModel.js","sourcesContent":["import { async } from 'regenerator-runtime'\r\nimport { Student } from '../orms'\r\n\r\n\r\n\r\nexport const getStudents = async ({ skip, limit, order, sort }) => {\r\n  const students = await Student.findAll({\r\n    order: [\r\n      [order, sort]\r\n    ],\r\n    offset: skip,\r\n    limit\r\n  })\r\n  const { count, rows } = await Student.findAndCountAll()\r\n  return { students, count }\r\n}\r\n\r\nexport const getOneStudent = async id => {\r\n  const student = await Student.findByPk(id)\r\n  return student\r\n}\r\n\r\nexport const createOneStudent = async ({ name, age }) => {\r\n  const student = await Student.create({ name, age })\r\n  return student\r\n}\r\n\r\nexport const updateOneStudent = async ({ id, name }) => {\r\n  let student  = await Student.findByPk(id)\r\n  student.name = name\r\n  student.age = age\r\n  student.save()\r\n  return student\r\n}\r\n\r\nexport const deleteOneStudent = async id => {\r\n  const student = await Student.destroy({\r\n    where: { id }\r\n  })\r\n  return student\r\n}"]}