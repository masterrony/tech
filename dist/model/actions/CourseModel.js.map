{"version":3,"sources":["../../../src/model/actions/CourseModel.js"],"names":["getCourses","skip","limit","order","sort","Course","findAll","offset","courses","findAndCountAll","count","rows","getOneCourse","id","findByPk","course","createOneCourse","title","field","create","updateOneCourse","save","deleteOneCourse","destroy","where"],"mappings":";;;;;;;AAAA;;AACA;;;;AAIO,IAAMA;AAAA,qEAAa;AAAA,QAASC,IAAT,SAASA,IAAT;AAAA,QAAeC,KAAf,SAAeA,KAAf;AAAA,QAAsBC,KAAtB,SAAsBA,KAAtB;AAAA,QAA6BC,IAA7B,SAA6BA,IAA7B;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFC,aAAOC,OAAP,CAAe;AACnCH,qBAAO,CACL,CAACA,KAAD,EAAQC,IAAR,CADK,CAD4B;AAInCG,sBAAQN,IAJ2B;AAKnCC;AALmC,aAAf,CADE;;AAAA;AAClBM,mBADkB;AAAA;AAAA,mBAQMH,aAAOI,eAAP,EARN;;AAAA;AAAA;AAQhBC,iBARgB,SAQhBA,KARgB;AAQTC,gBARS,SAQTA,IARS;AAAA,6CASjB,EAAEH,gBAAF,EAAWE,YAAX,EATiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAYA,IAAME;AAAA,sEAAe,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLR,aAAOS,QAAP,CAAgBD,EAAhB,CADK;;AAAA;AACpBE,kBADoB;AAAA,8CAEnBA,MAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMC;AAAA,sEAAkB;AAAA,QAASC,KAAT,SAASA,KAAT;AAAA,QAAgBC,KAAhB,SAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRb,aAAOc,MAAP,CAAc,EAAEF,YAAF,EAASC,YAAT,EAAd,CADQ;;AAAA;AACvBH,kBADuB;AAAA,8CAEtBA,MAFsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAKA,IAAMK;AAAA,sEAAkB;AAAA,QAASP,EAAT,SAASA,EAAT;AAAA,QAAaI,KAAb,SAAaA,KAAb;AAAA,QAAoBC,KAApB,SAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACTb,aAAOS,QAAP,CAAgBD,EAAhB,CADS;;AAAA;AACzBE,kBADyB;;AAE7BA,mBAAOE,KAAP,GAAeA,KAAf;AACAF,mBAAOG,KAAP,GAAeA,KAAf;AACAH,mBAAOM,IAAP;AAJ6B,8CAKtBN,MALsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAQA,IAAMO;AAAA,sEAAkB,kBAAMT,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRR,aAAOkB,OAAP,CAAe;AAClCC,qBAAO,EAAEX,MAAF;AAD2B,aAAf,CADQ;;AAAA;AACvBE,kBADuB;AAAA,8CAItBA,MAJsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"CourseModel.js","sourcesContent":["import { async } from 'regenerator-runtime'\r\nimport { Course } from '../orms'\r\n\r\n\r\n\r\nexport const getCourses = async ({ skip, limit, order, sort }) => {\r\n  const courses = await Course.findAll({\r\n    order: [\r\n      [order, sort]\r\n    ],\r\n    offset: skip,\r\n    limit\r\n  })\r\n  const { count, rows } = await Course.findAndCountAll()\r\n  return { courses, count }\r\n}\r\n\r\nexport const getOneCourse = async id => {\r\n  const course = await Course.findByPk(id)\r\n  return course\r\n}\r\n\r\nexport const createOneCourse = async ({ title, field }) => {\r\n  const course = await Course.create({ title, field })\r\n  return course\r\n}\r\n\r\nexport const updateOneCourse = async ({ id, title, field }) => {\r\n  let course  = await Course.findByPk(id)\r\n  course.title = title\r\n  course.field = field\r\n  course.save()\r\n  return course\r\n}\r\n\r\nexport const deleteOneCourse = async id => {\r\n  const course = await Course.destroy({\r\n    where: { id }\r\n  })\r\n  return course\r\n}"]}