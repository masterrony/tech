{"version":3,"sources":["../../../src/model/actions/UserModel.js"],"names":["auth","cb","deviceId","phone","password","User","findOne","exec","user","scs","msg","save","verifyPassword","allowed","id","_id","pubKey","setPubKey","findByIdAndUpdate","err","setOnline","status","online","getUserList","find","$ne","lean","then","users","target","catch","getUsers","skip","limit","sort","order","length","totalCount","getOneUser","findById","updateOneUser","deleteOneUser","findByIdAndRemove"],"mappings":"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","file":"UserModel.js","sourcesContent":["import { async } from 'regenerator-runtime'\r\nimport User from '../schemas/User'\r\nimport { \r\n  getUsersWithLastMessages, \r\n  getCompleteUsers, \r\n  destructMsgToUser \r\n} from './MessageModel'\r\n\r\nexport const auth = async ({ deviceId, phone, password }, cb) => {\r\n  let user = await User.findOne({ deviceId }).exec()\r\n\r\n  if(!user) {\r\n    user = await User.findOne({ phone }).exec()\r\n    if(!!user) return cb({ scs: 0, msg: 'Unknown Device!' })\r\n    user = new User({ deviceId, phone, password })\r\n    user = await user.save()\r\n    return cb({ scs: 0, msg: 'Please wait until allowed.', user })\r\n  }\r\n\r\n  if(user.phone !== phone)\r\n    return cb({ scs: 0, msg: 'Unknown Phone!' })\r\n\r\n  if(!user.verifyPassword(password))\r\n    return cb({ scs: 0, msg: 'Wrong Password!' })\r\n  \r\n  if(!user.allowed)\r\n    return cb({ scs: 0, msg: 'Please wait until allowed.' })\r\n\r\n  return cb({\r\n    scs: 1,\r\n    user: { id: user._id, pubKey: user.pubKey }\r\n  })\r\n}\r\n\r\nexport const setPubKey = ({ user, pubKey }) => {\r\n  destructMsgToUser(user)\r\n  User.findByIdAndUpdate(user, { pubKey }, err => {\r\n    if(!!err)\r\n      throw err\r\n  })\r\n}\r\n\r\nexport const setOnline = ({ user, status }) => {\r\n  User.findByIdAndUpdate(user, { online: status }, err => {\r\n    if(!!err)\r\n      throw err\r\n  })\r\n}\r\n\r\nexport const getUserList = (user, cb) => {\r\n  User.find({ _id: { $ne: user } }, '_id phone online pubKey')\r\n    .lean().exec().then( async users => {\r\n      users = await getUsersWithLastMessages({ users, target: user })\r\n      users = await getCompleteUsers({ users, target: user })\r\n      return cb(users)\r\n    })\r\n    .catch(err => {throw err})\r\n}\r\n\r\nexport const getUsers = async ({ skip, limit, sort, order }) => {\r\n  const users = await User.find(\r\n    {}, \r\n    '_id phone deviceId online allowed created_at',\r\n    { skip, limit }\r\n  ).sort([[ sort, order ]]).lean().exec()\r\n\r\n  const totalCount = await (await User.find({}).lean().exec()).length\r\n\r\n  return { users, totalCount }\r\n}\r\n\r\nexport const getOneUser = async id => {\r\n  const user = await User.findById(id).lean().exec()\r\n  return user\r\n}\r\n\r\nexport const updateOneUser = async ({ id, allowed }) => {\r\n  const user = await User.findByIdAndUpdate(id, { allowed }).exec()\r\n  return user\r\n}\r\n\r\nexport const deleteOneUser = async id => {\r\n  const user = await User.findByIdAndRemove(id).exec()\r\n  return user\r\n}"]}